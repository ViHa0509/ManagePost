{"version":3,"sources":["redux/actions/index.js","components/Header/styles.js","components/Header/index.js","components/PostList/Post/styles.js","components/PostList/Post/index.js","redux/selectors/index.js","components/PostList/index.js","pages/style.js","components/CreatePostModal/styles.js","components/CreatePostModal/index.js","pages/HomePage.js","App.js","constant.js","redux/reducers/index.js","redux/reducers/posts.js","redux/reducers/modal.js","api/index.js","redux/sagas/index.js","index.js"],"names":["getType","reduxAction","type","getPosts","createActions","getPostsRequest","undefined","getPostsSuccess","payload","getPostsFailure","err","createPost","createPostRequest","createPostSuccess","createPostFailure","updatePost","updatePostRequest","updatePostSuccess","updatePostFailure","showModal","createAction","hideModal","makeStyles","theme","container","backgroundColor","palette","primary","main","color","marginBottom","fontWeight","padding","Header","classes","useStyles","Typography","variant","align","className","media","height","Post","post","dispatch","useDispatch","onLikeBtnClick","React","useCallback","like","Card","CardHeader","avatar","Avatar","attchment","title","author","subheader","moment","created_on","format","action","IconButton","CardMedia","image","CardContent","content","CardActions","onClick","component","postsState$","state","posts","data","modalState$","modal","PostList","useSelector","console","log","useEffect","actions","Grid","spacing","alignItems","map","item","xs","sm","id","fab","position","bottom","right","paper","top","left","transform","width","background","boxShadow","shadows","form","display","flexDirection","header","margin","textarea","footer","marginTop","CreatePostModal","useState","setData","isShow","onClose","onSubmit","body","noValidate","autoComplete","TextField","required","label","value","onChange","e","target","TextareaAutosize","rowsMin","rowsMax","placeholder","accept","multiple","onDone","base64","Button","fullWidth","Modal","open","HomePage","openCreatePostModal","Container","maxWidth","Fab","App","INIT_STATE","isLoading","combineReducers","URL","fetchPosts","axious","get","patch","fetchPostSaga","createPostSaga","updatePostSaga","mySaga","call","api","put","error","updatedpost","takeLatest","sagaMiddleware","CreateSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7025efd.chunk.js","sourcesContent":["import { createActions, createAction } from 'redux-actions';\r\n\r\nexport const getType = (reduxAction) => {\r\n    return reduxAction().type;\r\n};\r\n\r\nexport const getPosts = createActions({\r\n    getPostsRequest: undefined,\r\n    getPostsSuccess: (payload) => payload,\r\n    getPostsFailure: (err) => err,\r\n});\r\n\r\nexport const createPost = createActions({\r\n    createPostRequest: (payload) => payload,\r\n    createPostSuccess:(payload) => payload,\r\n    createPostFailure: (err) => err,\r\n});\r\n\r\nexport const updatePost = createActions({\r\n    updatePostRequest: (payload) => payload,\r\n    updatePostSuccess:(payload) => payload,\r\n    updatePostFailure: (err) => err,\r\n});\r\n\r\nexport const showModal = createAction('SHOW_CREATE_POST_MODAL');\r\nexport const hideModal = createAction('HIDE_CREATE_POST_MODAL');","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles( (theme) =>({\r\n    container: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"white\",\r\n        marginBottom: 20,\r\n        fontWeight: 'lighter',\r\n        padding: '5px 0',\r\n    },\r\n}));","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\nexport default function Header(){\r\n    const classes = useStyles();\r\n    return  (\r\n    <Typography variant=\"h4\" align=\"center\" className={classes.container}>\r\n        Blog\r\n    </Typography>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    media:{\r\n        height: 150,\r\n    }\r\n}));","import React from 'react';\r\nimport {\r\n    Avatar, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport useStyles from './styles'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updatePost } from '../../../redux/actions';\r\n\r\nexport default function Post({ post }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const onLikeBtnClick = React.useCallback(() => {\r\n        dispatch(updatePost.updatePostRequest({ ...post, like: post.like + 1 }));\r\n    }, [dispatch, post]);\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={<Avatar>{post.attchment}</Avatar>}\r\n                title={post.author}\r\n                subheader={moment(post.created_on).format('HH:MM MM DD,YYYY')}\r\n                action={\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n            />\r\n            <CardMedia image={post.attchment} title='Title' className={classes.media} />\r\n            <CardContent>\r\n                <Typography variant='h5' color='textPrimary'>{post.title}</Typography>\r\n                <Typography variant='body2' color='p' color='textSecondary'>{post.content}</Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton>\r\n                    <FavoriteIcon onClick={onLikeBtnClick} />\r\n                    <Typography component=\"span\" color=\"textSecondary\">\r\n                        {post.like} likes\r\n                    </Typography>\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","export const postsState$ = (state) => state.posts.data;\r\n\r\nexport const modalState$ = (state) => state.modal;","import React from 'react';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Post from './Post';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport { postsState$ } from '../../redux/selectors';\r\n\r\nexport default function PostList() {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(postsState$);\r\n\r\n    console.log('[PostList - posts]', posts)\r\n    React.useEffect(() => {\r\n        dispatch(actions.getPosts.getPostsRequest());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Grid container spacing={2} alignItems=\"stretch\">\r\n            {posts.map( (post) => (\r\n                <Grid item xs={12} sm={6}>\r\n                    <Post key={post.id} post={post} />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    }\r\n}));"," import { makeStyles } from \"@material-ui/core\";\r\n\r\n export default makeStyles((theme) => ({\r\n    paper: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2,4,3),\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    header: {\r\n        margin: '0 0 10px 0',\r\n    },\r\n    title:{\r\n        marginBottom: '10px',\r\n    },\r\n    textarea: {\r\n        padding: '10px',\r\n        marginBottom: '10px',\r\n    },\r\n    footer: {\r\n        marginTop: '10px',\r\n    },\r\n }));","import { Button, Modal, TextareaAutosize, TextField } from '@material-ui/core';\r\nimport FileBase64 from 'react-file-base64';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { modalState$ } from '../../redux/selectors';\r\nimport useStyles from './styles';\r\nimport { createPost, hideModal } from '../../redux/actions';\r\n\r\nexport default function CreatePostModal() {\r\n    const [data, setData] = React.useState({\r\n        title: '',\r\n        content: '',\r\n        attchment: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const { isShow } = useSelector(modalState$);\r\n    const classes = useStyles();\r\n\r\n    const onClose = React.useCallback(() => {\r\n        dispatch(hideModal());\r\n        setData({\r\n            title: '',\r\n            content: '',\r\n            attchment:'',\r\n        })\r\n    }, [dispatch]);\r\n\r\n    const onSubmit = React.useCallback(() => {\r\n        console.log({ data });\r\n        dispatch(createPost.createPostRequest(data));\r\n    }, [data, dispatch]);\r\n\r\n    const body = (\r\n        <div className={classes.paper} id='simple-modal-title'>\r\n            <h2>Create New Post</h2>\r\n            <form noValidate autoComplete='off' className={classes.form}>\r\n                <TextField className={classes.title}\r\n                    required label='Title'\r\n                    value={data.title}\r\n                    onChange={(e) => setData({ ...data, title: e.target.value })}\r\n                />\r\n                <TextareaAutosize className={classes.textarea}\r\n                    rowsMin={10}\r\n                    rowsMax={15}\r\n                    placeholder='Content...'\r\n                    value={data.content}\r\n                    onChange={(e) => setData({ ...data, content: e.target.value })}\r\n                />\r\n                <FileBase64 accept='image/*'\r\n                    multiple={false}\r\n                    type='file'\r\n                    value={data.attchment}\r\n                    onDone={({ base64 }) => setData({ ...data, attchment: base64 })}\r\n                />\r\n                <div className={classes.footer}>\r\n                    <Button\r\n                        variant='contained'\r\n                        color='primary'\r\n                        component='span'\r\n                        fullWidth\r\n                        onClick={onSubmit}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n    console.log({ isShow })\r\n    return (\r\n        <div>\r\n            <Modal open={isShow} onClose={onClose}>\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { Container, Fab } from '@material-ui/core';\r\nimport Header from '../components/Header';\r\nimport PostList from '../components/PostList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport useStyles from './style';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showModal } from '../redux/actions';\r\nimport CreatePostModal from '../components/CreatePostModal';\r\n\r\n\r\nexport default function HomePage() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const openCreatePostModal = React.useCallback(() => {\r\n        dispatch(showModal());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n    <Container maxWidth=\"lg\">\r\n        <Header />\r\n        <PostList />\r\n        <CreatePostModal/>\r\n        <Fab \r\n            color='primary' \r\n            className={classes.fab} \r\n            onClick={openCreatePostModal}>\r\n            <AddIcon />\r\n        </Fab>\r\n    </Container>\r\n    );\r\n}","import {useDispatch} from 'react-redux';\nimport * as actions from './redux/actions';\nimport HomePage  from './pages/HomePage';\nfunction App() {\n    return <HomePage></HomePage>;\n};\n\nexport default App;\n","export const INIT_STATE = {\r\n    posts: {\r\n        isLoading: false, \r\n        data: []\r\n    },\r\n    modal: {\r\n        isShow: false,\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport posts from './posts';\r\nimport modal from './modal';\r\n\r\nexport default combineReducers({\r\n    posts, \r\n    modal\r\n});","import { INIT_STATE } from '../../constant';\r\nimport { getPosts, getType, updatePost, createPost } from '../actions';\r\n\r\nexport default function postsReducers(state = INIT_STATE.posts, action) {\r\n    switch(action.type) {\r\n        case getType(getPosts.getPostsRequest):\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case getType(getPosts.getPostsSuccess):\r\n            return{\r\n                ...state, \r\n                isLoading: false,\r\n                data: action.payload,\r\n            };\r\n        case getType(getPosts.getPostsFailure):\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n            };\r\n        case getType(createPost.createPostSuccess):\r\n            return{\r\n                ...state, \r\n                data: [...state.data, action.payload],\r\n            };\r\n        case getType(updatePost.updatePostSuccess):\r\n            return{\r\n                ...state, \r\n                data: state.data.map(post => post.id == action.payload.id ? action.payload : post),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { INIT_STATE } from '../../constant';\r\nimport { getType, showModal, hideModal } from '../actions';\r\n\r\nexport default function modalReducers(state = INIT_STATE.modal, action) {\r\n    switch (action.type) {\r\n        case getType(showModal):\r\n            return {\r\n                isShow: true\r\n            };\r\n        case getType(hideModal):\r\n            return {\r\n                isShow: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import axious from 'axios';\r\n\r\nconst URL = 'http://localhost:8000';\r\n\r\nexport const fetchPosts = () => axious.get(`${URL}/posts/`);\r\nexport const createPost = (payload) => axious.post(`${URL}/posts/`, payload);\r\nexport const updatePost = (payload) => axious.patch(`${URL}/posts/${payload.id}/`, payload);","import {takeLatest, call, put} from 'redux-saga/effects';\r\nimport * as actions from '../actions';\r\nimport * as api from '../../api';\r\n\r\nfunction* fetchPostSaga(action){\r\n    try {\r\n        const posts = yield call(api.fetchPosts);\r\n        console.log('[post]', posts);\r\n        yield put(actions.getPosts.getPostsSuccess(posts.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put(actions.getPosts.getPostsFailure(err));\r\n    }\r\n};\r\n\r\nfunction* createPostSaga(action) {\r\n    try {\r\n        const post = yield call(api.createPost, action.payload);\r\n        console.log('[createPostSaga - post]', post);\r\n        yield put(actions.createPost.createPostSuccess(post.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put(actions.createPost.createPostFailure(err));\r\n    }\r\n};\r\n\r\nfunction* updatePostSaga(action) {\r\n    try {\r\n        console.log({action})\r\n        const updatedpost = yield call(api.updatePost, action.payload);\r\n        console.log('[updatePostSaga - post]', updatedpost);\r\n        yield put(actions.updatePost.updatePostSuccess(updatedpost.data));\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put(actions.updatePost.updatePostFailure(err));\r\n    }\r\n};\r\n\r\nfunction* mySaga() {\r\n    yield takeLatest(actions.getPosts.getPostsRequest, fetchPostSaga);\r\n    yield takeLatest(actions.createPost.createPostRequest, createPostSaga);\r\n    yield takeLatest(actions.updatePost.updatePostRequest, updatePostSaga);\r\n};\r\n\r\nexport default mySaga;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport CreateSagaMiddleware from 'redux-saga';\nimport reducers from './redux/reducers';\nimport mySaga from './redux/sagas';\n\nconst sagaMiddleware = CreateSagaMiddleware();\n\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}